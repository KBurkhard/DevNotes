

- Lesson 12, UI design
- design priciples
  - users interact with objects directly, not using button ans menus
  - use imagery and pictures in place of words and senetences
  - allow users to customize app, while providing sensible defaults
  - simple shortcuts for complex tasks
  -
  
- good practices
  - make mockup of how you see the application looking through al its screens
    - specify what colors to use
    - keylines: exact size and spacing for components
  - materal design guidelines
   - set of principles and guides for design

- colors
  - should go together
  - help to distinguish views from interactive components
    - have primary color (base color for the app) and accent color (brighter to draw attention to buttons in app)
    - onlien tools to help choose color palette
    - choose 3 shades of primary color and 1 accent color
      - ie: 3 shade purlple, orange; they are near opposite colors, so have high conyracst
    - so colors
      - 3 primary
      - 1 accent
      - primary text, secondary test, text
      - divider color
      
- fonts
  - stick one font family
  - modify size and weight for changes
  - stay with a few consistent styles within font familuy
  - text size units of sp (scale independent pixels)
    - unit is dp (density independent pizxels)
    - these will stay smae physical size across different screen resolutions
    - also, any sp text will be largened if accessibility turned on
      
- density: # pixels per sq inch
  - 5 ranges
    - mdpi (160 dpi)
    - hdpi (240)
    - xhdpi (320)
    - xxhdpi (480)
    - xxxhdpi (640)
    
- layouts are not based on smallest screen supported
  - smallest width qualifier (regardless of arientation)
    - ie: res
      - layout
      - layout-sw600dp
      - layout-720dp
      
    - if doesn't have layout file for activity in folder, defaults to next lowest folder that does
    
    
- of use view width of 0dp, use layout_weight
  - so for tablet layout, use linear layout, then widths of 0dp for columns, then layout weights to parse out screen size between views
  
    <ImageView
        android:layout_width="0dp"
        android:layout_gravity="center_horizontal"
        android:layout_height="200dp"
        android:layout_weight="1"
        android:paddingBottom="8dp"
        android:src="@drawable/ic_insert_image"
        android:gravity="center"
        android:contentDescription="@string/image_placeholder" />
        
- touch selectors
  - will change look of layout when touched (or otherwise selectde based on android action configured for)
      
      <?xml version="1.0" encoding="utf-8"?>
<!-- TODO (1) Create a new drawable resource,named list_item_selector, choosing "selector" as the root element -->
<selector xmlns:android="http://schemas.android.com/apk/res/android">

    <!-- TODO (2) Add the primary light color to three items for: pressed, activated, and selected states -->
    <item android:drawable="@color/colorPrimaryLight" android:state_pressed="true"/>
    <item android:drawable="@color/colorPrimaryLight" android:state_activated="true"/>
    <item android:drawable="@color/colorPrimaryLight" android:state_selected="true"/>

    <!-- TODO (3) Add one more item for the default (unselected) state -->
    <!-- This should have a default drawable color = "@android:color/background_light" -->
    <item android:drawable="@android:color/background_light"/>

</selector>
      


      
- notes
  - create a view to test colors; can be hidden easter eggs
     - see ex 12.01
    
- redo
  - sunshine 12.01
  - 
     
     
     
     
- styles.xml     
    <!--  (2) Create a new style "folderStyle" to group properties for the mail folder text views -->
    <!-- This style should group all the property values found in the inbox view, like layout_width, height, etc, that are meant to repeat -->
    <style name="folderStyle">
        <item name="android:layout_width">match_parent</item>
        <item name="android:layout_height">wrap_content</item>
        <item name="android:drawablePadding">8dp</item>
        <item name="android:paddingTop">4dp</item>
        <item name="android:paddingBottom">4dp</item>
        <item name="android:textSize">28sp</item>
        <item name="android:textColor">@android:color/black</item>
    </style>

    <!-- TODO (4) Create a new "inboxStyle" that inherits from "folderStyle" and includes a bold textStyle property -->
    <style name="inboxStyle" parent="folderStyle">
        <item name="android:textStyle">bold</item>
    </style>

- colors.xml
    <!-- Base application colors -->
    <color name="colorPrimary">#673AB7</color>
    <color name="colorPrimaryDark">#512DA8</color>
    <color name="colorAccent">#FF9100</color>
    <!-- Create a new color, colorPrimaryLight that is #D1C4E9 -->
    <color name="colorPrimaryLight">#D1C4E9</color>






     
    